[{"/Users/abelcotes/Documents/Ciclo3/aReact/Vendedores/sellers/src/index.js":"1","/Users/abelcotes/Documents/Ciclo3/aReact/Vendedores/sellers/src/App.js":"2","/Users/abelcotes/Documents/Ciclo3/aReact/Vendedores/sellers/src/reportWebVitals.js":"3","/Users/abelcotes/Documents/Ciclo3/aReact/Vendedores/sellers/src/components/User/User.js":"4","/Users/abelcotes/Documents/Ciclo3/aReact/Vendedores/sellers/src/components/PaginaNoEncontrada/PaginaNoEncontrada.js":"5","/Users/abelcotes/Documents/Ciclo3/Sprint-3-y-4/Vendedores/sellers/src/index.js":"6","/Users/abelcotes/Documents/Ciclo3/Sprint-3-y-4/Vendedores/sellers/src/reportWebVitals.js":"7","/Users/abelcotes/Documents/Ciclo3/Sprint-3-y-4/Vendedores/sellers/src/App.js":"8","/Users/abelcotes/Documents/Ciclo3/Sprint-3-y-4/Vendedores/sellers/src/components/PaginaNoEncontrada/PaginaNoEncontrada.js":"9","/Users/abelcotes/Documents/Ciclo3/Sprint-3-y-4/Vendedores/sellers/src/components/User/User.js":"10","/Users/abelcotes/Desktop/VamosAver/sellers/src/index.js":"11","/Users/abelcotes/Desktop/VamosAver/sellers/src/App.js":"12","/Users/abelcotes/Desktop/VamosAver/sellers/src/reportWebVitals.js":"13","/Users/abelcotes/Desktop/VamosAver/sellers/src/components/PaginaNoEncontrada/PaginaNoEncontrada.js":"14","/Users/abelcotes/Desktop/VamosAver/sellers/src/components/User/User.js":"15"},{"size":546,"mtime":1634263415246,"results":"16","hashOfConfig":"17"},{"size":522,"mtime":1634256970642,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1634248736306,"results":"19","hashOfConfig":"17"},{"size":9467,"mtime":1634336400005,"results":"20","hashOfConfig":"17"},{"size":408,"mtime":1634257365339,"results":"21","hashOfConfig":"17"},{"size":546,"mtime":1634263415246,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1634248736306,"results":"24","hashOfConfig":"23"},{"size":522,"mtime":1634256970642,"results":"25","hashOfConfig":"23"},{"size":408,"mtime":1634257365339,"results":"26","hashOfConfig":"23"},{"size":10734,"mtime":1634388841323,"results":"27","hashOfConfig":"23"},{"size":546,"mtime":1634263415246,"results":"28","hashOfConfig":"29"},{"size":522,"mtime":1634256970642,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1634248736306,"results":"31","hashOfConfig":"29"},{"size":408,"mtime":1634257365339,"results":"32","hashOfConfig":"29"},{"size":10734,"mtime":1634388841323,"results":"33","hashOfConfig":"29"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bzw6ux",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1vytc64",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oqpy5k",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"/Users/abelcotes/Documents/Ciclo3/aReact/Vendedores/sellers/src/index.js",[],"/Users/abelcotes/Documents/Ciclo3/aReact/Vendedores/sellers/src/App.js",[],"/Users/abelcotes/Documents/Ciclo3/aReact/Vendedores/sellers/src/reportWebVitals.js",[],"/Users/abelcotes/Documents/Ciclo3/aReact/Vendedores/sellers/src/components/User/User.js",["67","68"],"/Users/abelcotes/Documents/Ciclo3/aReact/Vendedores/sellers/src/components/PaginaNoEncontrada/PaginaNoEncontrada.js",["69"],"import React from 'react';\nimport styles from './PaginaNoEncontrada.module.css';\nimport { Alert } from 'reactstrap';\n\nconst PaginaNoEncontrada = () => (\n  <div className={styles.PaginaNoEncontrada} data-testid=\"PaginaNoEncontrada\">\n    <Alert color=\"info\" className='text-center'>\n    No se encontró la página <br/>\n    <a href= '/users'></a>\n    </Alert>\n  </div>\n);\n\n\n\nexport default PaginaNoEncontrada;\n","/Users/abelcotes/Documents/Ciclo3/Sprint-3-y-4/Vendedores/sellers/src/index.js",[],["70","71"],"/Users/abelcotes/Documents/Ciclo3/Sprint-3-y-4/Vendedores/sellers/src/reportWebVitals.js",[],"/Users/abelcotes/Documents/Ciclo3/Sprint-3-y-4/Vendedores/sellers/src/App.js",[],"/Users/abelcotes/Documents/Ciclo3/Sprint-3-y-4/Vendedores/sellers/src/components/PaginaNoEncontrada/PaginaNoEncontrada.js",["72"],"/Users/abelcotes/Documents/Ciclo3/Sprint-3-y-4/Vendedores/sellers/src/components/User/User.js",["73","74"],"import React from 'react';\nimport {\n  Table,\n  Button,\n  Container,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  ModalFooter,\n} from \"reactstrap\";\n\nconst BASE_URL = process.env.REACT_APP_API_URL;\nconst PATH_CUSTOMERS = 'customers';\n\nclass User extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      modalActualizar: false,\n      modalInsertar: false,\n      form: {\n        _id: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        address: \"\",\n        firstName: \"\",\n        lastName: \"\"\n      }\n    };\n  }\n\n  componentDidMount() \n  {    this.cargarCustomers(); \n   }\n\n\n  mostrarModalActualizar = (dato) => {\n\n    this.setState({ modalActualizar: true, form: dato });\n\n  };\n\n  cerrarModalActualizar = () => {\n    this.setState({ modalActualizar: false });\n  };\n\n  mostrarModalInsertar = () => {\n    this.setState({ modalInsertar: true });\n  };\n\n  cerrarModalInsertar = () => {\n    this.setState({ modalInsertar: false });\n  };\n\n  editar = (dato) => {\n    let contador = 0;\n    let arregloUsuarios = this.state.data;\n    arregloUsuarios.map((registro) => {\n      if (dato._id === registro._id) {\n        arregloUsuarios[contador].firstName = dato.firstName;\n        arregloUsuarios[contador].lastName = dato.lastName;\n        arregloUsuarios[contador].email = dato.email;\n        arregloUsuarios[contador].phoneNumber = dato.phoneNumber;\n        arregloUsuarios[contador].address = dato.address;\n      }\n      contador++;\n    });\n\n    this.setState({ data: arregloUsuarios, modalActualizar:false });\n  };\n\n  eliminar = (dato) => {\n    let opcion = window.confirm(\"¿Está seguro que desea eliminar a \" + dato.firstName + \"?\");\n    if (opcion) {\n      let contador = 0;\n      let arregloUsuarios = this.state.data;\n      arregloUsuarios.map((registro) => {\n        if (dato._id === registro._id) {\n          arregloUsuarios.splice(contador, 1);\n        }\n        contador++;\n      });\n\n      this.setState({ data: arregloUsuarios });\n    }\n\n  };\n\n  insertar = () => {\n    let usuarioACrear = { ...this.state.form };\n    //usuarioACrear._id = this.state.data.length + 1;\n    //let arregloUsuarios = this.state.data;\n\n    //arregloUsuarios.push(usuarioACrear);\n    this.crearCustomer(usuarioACrear);\n\n    this.setState({  modalInsertar: false });\n\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  render() {\n\n    return (\n      <>\n        <Container>\n          <br />\n          <Button color=\"primary\" onClick={() => this.mostrarModalInsertar()}>Crear</Button>\n          <br />\n          <br />\n          <Table>\n            <thead>\n              <tr>\n                <th>Email</th>\n                <th>Nombre</th>\n                <th>Apellido</th>\n                <th>Dirección</th>\n                <th>Telefóno</th>\n                <th>Acción</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {this.state.data.map((dato) => (\n                <tr key={dato._id}>\n                  <td>{dato.email}</td>\n                  <td>{dato.firstName}</td>\n                  <td>{dato.lastName}</td>\n                  <td>{dato.address}</td>\n                  <td>{dato.phoneNumber}</td>\n                  <td>\n                    <Button\n                      color=\"success\"\n                      onClick={() => this.mostrarModalActualizar(dato)}\n                    >\n                      Editar\n                    </Button>{\" \"}\n                    <Button color=\"danger\" onClick={() => this.eliminar(dato)}>Eliminar</Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Container>\n\n        <Modal isOpen={this.state.modalActualizar}>\n          <ModalHeader>\n            <div><h3>Actualizar Usuario {this.state.form.id}</h3></div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>\n                Id:\n              </label>\n\n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.form._id}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Email:\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"email\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.email}\n                required\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Nombre:\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"firstName\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.firstName}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Apellido:\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"lastName\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.lastName}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Dirección:\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"address\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.address}\n              />\n            </FormGroup>\n            <FormGroup>\n              <label>\n                Telefóno:\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"phoneNumber\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.form.phoneNumber}\n              />\n            </FormGroup>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => this.editar(this.state.form)}\n            >\n              Actualizar\n            </Button>\n            <Button\n              className=\"btn btn-danger\"\n              onClick={() => this.cerrarModalActualizar()}\n            >\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n\n\n        <Modal isOpen={this.state.modalInsertar}>\n          <ModalHeader>\n            <div><h3>Insertar Usuario</h3></div>\n          </ModalHeader>\n\n          <ModalBody>\n            <FormGroup>\n              <label>\n                Id:\n              </label>\n\n              <input\n                className=\"form-control\"\n                readOnly\n                type=\"text\"\n                value={this.state.data.length + 1}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Email:\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"email\"\n                type=\"text\"\n                onChange={this.handleChange}\n                required\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Nombre:\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"firstName\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Apellido:\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"lastName\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n\n            <FormGroup>\n              <label>\n                Dirección:\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"address\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n            <FormGroup>\n              <label>\n                Telefóno:\n              </label>\n              <input\n                className=\"form-control\"\n                name=\"phoneNumber\"\n                type=\"text\"\n                onChange={this.handleChange}\n              />\n            </FormGroup>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              color=\"primary\"\n              onClick={() => this.insertar()}\n            >\n              Insertar\n            </Button>\n            <Button\n              className=\"btn btn-danger\"\n              onClick={() => this.cerrarModalInsertar()}\n            >\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  }\n  cargarCustomers() {\n    this.setState({ mostrarCargando: true });\n    fetch(`${BASE_URL}${PATH_CUSTOMERS}`)\n      .then(result => result.json())\n      .then(\n        (result) => {\n          this.setState({ data: result, mostrarCargando: false });\n        },\n        // Nota: es importante manejar errores aquí y no en \n        // un bloque catch() para que no interceptemos errores\n        // de errores reales en los componentes.\n        (error) => {\n          console.log(error);\n        }\n      )\n  }\n\n\n  crearCustomer(customer) {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(customer)\n    };\n    fetch(`${BASE_URL}${PATH_CUSTOMERS}`, requestOptions)\n      .then(result => result.json())\n      .then(\n        (result) => {\n          this.cargarCustomers();\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n\n  borrarCustomer(id) {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' }\n    };\n    fetch(`${BASE_URL}${PATH_CUSTOMERS}/${id}`, requestOptions)\n      .then(result => result.json())\n      .then(\n        (result) => {\n          this.cargarCustomers();\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n\n  actualizarCustomer(customer) {\n    const requestOptions = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(customer)\n    };\n    fetch(`${BASE_URL}${PATH_CUSTOMERS}/${customer._id}`, requestOptions)\n      .then(result => result.json())\n      .then(\n        (result) => {\n          this.cargarCustomers();\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n\n}\nexport default User;","/Users/abelcotes/Desktop/VamosAver/sellers/src/index.js",[],"/Users/abelcotes/Desktop/VamosAver/sellers/src/App.js",[],"/Users/abelcotes/Desktop/VamosAver/sellers/src/reportWebVitals.js",[],"/Users/abelcotes/Desktop/VamosAver/sellers/src/components/PaginaNoEncontrada/PaginaNoEncontrada.js",["75"],"/Users/abelcotes/Desktop/VamosAver/sellers/src/components/User/User.js",["76","77"],{"ruleId":"78","severity":1,"message":"79","line":63,"column":36,"nodeType":"80","messageId":"81","endLine":63,"endColumn":38},{"ruleId":"78","severity":1,"message":"79","line":82,"column":38,"nodeType":"80","messageId":"81","endLine":82,"endColumn":40},{"ruleId":"82","severity":1,"message":"83","line":9,"column":5,"nodeType":"84","endLine":9,"endColumn":23},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"82","severity":1,"message":"83","line":9,"column":5,"nodeType":"84","endLine":9,"endColumn":23},{"ruleId":"78","severity":1,"message":"79","line":62,"column":36,"nodeType":"80","messageId":"81","endLine":62,"endColumn":38},{"ruleId":"78","severity":1,"message":"79","line":81,"column":38,"nodeType":"80","messageId":"81","endLine":81,"endColumn":40},{"ruleId":"82","severity":1,"message":"83","line":9,"column":5,"nodeType":"84","endLine":9,"endColumn":23},{"ruleId":"78","severity":1,"message":"79","line":62,"column":36,"nodeType":"80","messageId":"81","endLine":62,"endColumn":38},{"ruleId":"78","severity":1,"message":"79","line":81,"column":38,"nodeType":"80","messageId":"81","endLine":81,"endColumn":40},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-global-assign","no-unsafe-negation"]